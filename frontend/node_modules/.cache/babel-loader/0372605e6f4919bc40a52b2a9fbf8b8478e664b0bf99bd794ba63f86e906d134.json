{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Home\\\\Documents\\\\Formation D\\xE9veloppeur Web\\\\Note Maker\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // État pour suivre le mode (true: blanc, false: initial)\n  const [isWhiteMode, setIsWhiteMode] = React.useState(false);\n\n  // Fonction pour basculer entre les modes\n  const toggleMode = () => {\n    setIsWhiteMode(prevMode => !prevMode);\n  };\n\n  // Effet pour mettre à jour la couleur du body lors du changement de mode\n  React.useEffect(() => {\n    if (isWhiteMode) {\n      document.body.style.backgroundColor = \"white\";\n    } else {\n      document.body.style.backgroundColor = \"\"; // Couleur par défaut\n    }\n  }, [isWhiteMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleMode,\n      children: \"Change mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"PxQC7vhxyGExszWpq3bM7r14enA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","App","_s","isWhiteMode","setIsWhiteMode","useState","toggleMode","prevMode","useEffect","document","body","style","backgroundColor","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Home/Documents/Formation Développeur Web/Note Maker/frontend/src/App.js"],"sourcesContent":["import React from \"react\";\n\nfunction App() {\n  // État pour suivre le mode (true: blanc, false: initial)\n  const [isWhiteMode, setIsWhiteMode] = React.useState(false);\n\n  // Fonction pour basculer entre les modes\n  const toggleMode = () => {\n    setIsWhiteMode((prevMode) => !prevMode);\n  };\n\n  // Effet pour mettre à jour la couleur du body lors du changement de mode\n  React.useEffect(() => {\n    if (isWhiteMode) {\n      document.body.style.backgroundColor = \"white\";\n    } else {\n      document.body.style.backgroundColor = \"\"; // Couleur par défaut\n    }\n  }, [isWhiteMode]);\n\n  return (\n    <div>\n      {/* Bouton qui déclenche le toggleMode au clic */}\n      <button onClick={toggleMode}>Change mode</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGN,KAAK,CAACO,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACA,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBF,cAAc,CAAEG,QAAQ,IAAK,CAACA,QAAQ,CAAC;EACzC,CAAC;;EAED;EACAT,KAAK,CAACU,SAAS,CAAC,MAAM;IACpB,IAAIL,WAAW,EAAE;MACfM,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,OAAO;IAC/C,CAAC,MAAM;MACLH,QAAQ,CAACC,IAAI,CAACC,KAAK,CAACC,eAAe,GAAG,EAAE,CAAC,CAAC;IAC5C;EACF,CAAC,EAAE,CAACT,WAAW,CAAC,CAAC;EAEjB,oBACEH,OAAA;IAAAa,QAAA,eAEEb,OAAA;MAAQc,OAAO,EAAER,UAAW;MAAAO,QAAA,EAAC;IAAW;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEV;AAAChB,EAAA,CAxBQD,GAAG;AAAAkB,EAAA,GAAHlB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}